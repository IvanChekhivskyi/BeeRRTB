{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Documents/Bee-RRBT/src/components/UI/ModuleLogin.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, CloseButton, Modal, ModalBody, ModalHeader, ModalTitle } from \"react-bootstrap\";\nimport { AccountActionType } from \"../../types/typeAccount\";\nimport { useDispatch } from \"react-redux\";\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport { fetchAPI } from \"../../store/action-creators/API_Account\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ModuleLogin = _ref => {\n  _s();\n  let {\n    show,\n    setShow\n  } = _ref;\n  const dispatch = useDispatch();\n  const dataList = useTypedSelector(state => state.account.dataList);\n  const arrayAPI = useTypedSelector(state => state.API.accountArray);\n  const [phone, setPhone] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [clickLogin, setClickLogin] = useState(false);\n  const [isShow, setIsShow] = useState(true);\n  const input = _ref2 => {\n    let {\n      tel,\n      pass\n    } = _ref2;\n    if (tel !== undefined) setPhone(tel);\n    if (pass !== undefined) setPassword(pass);\n  };\n  useEffect(() => {\n    if (arrayAPI.length === 0) {\n      // @ts-ignore\n      dispatch(fetchAPI());\n    }\n  }, []);\n  useEffect(() => {\n    if (show === true) {\n      setIsShow(true);\n    }\n    if (!isShow) {\n      if (setShow) setShow(false);\n    }\n  }, [show, isShow]);\n  useEffect(() => {\n    if (dataList.phone === \"\") {\n      for (let i = 0; i < arrayAPI.length; i++) {\n        if (arrayAPI[i].phone === phone) {\n          dispatch({\n            type: AccountActionType.ADD_DATA_LIST,\n            payload: {\n              phone: arrayAPI[i].phone,\n              name: arrayAPI[i].name,\n              username: arrayAPI[i].username,\n              street: arrayAPI[i].address.street,\n              suite: arrayAPI[i].address.suite,\n              city: arrayAPI[i].address.city,\n              password: arrayAPI[i].address.zipcode\n            }\n          });\n        }\n      }\n    }\n    if (clickLogin /*&& password !== \"\"*/) {\n      if (password === dataList.password && phone === dataList.phone) {\n        dispatch({\n          type: AccountActionType.ENTER_LOGIN,\n          payload: {\n            login: true\n          }\n        });\n        setIsShow(false);\n      }\n    }\n  }, [password, phone, clickLogin]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: isShow,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: [/*#__PURE__*/_jsxDEV(ModalTitle, {\n          children: \"\\u0412\\u0445\\u0456\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n          onClick: () => setIsShow(!isShow)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 59\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => input({\n            tel: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => input({\n            pass: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: () => setClickLogin(!clickLogin),\n          children: \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(ModuleLogin, \"rMcOkPYzg0ZlTNNUYUkbTI8uUSw=\", false, function () {\n  return [useDispatch, useTypedSelector, useTypedSelector];\n});\n_c = ModuleLogin;\nexport default ModuleLogin;\nvar _c;\n$RefreshReg$(_c, \"ModuleLogin\");","map":{"version":3,"names":["React","useEffect","useState","Button","CloseButton","Modal","ModalBody","ModalHeader","ModalTitle","AccountActionType","useDispatch","useTypedSelector","fetchAPI","ModuleLogin","show","setShow","dispatch","dataList","state","account","arrayAPI","API","accountArray","phone","setPhone","password","setPassword","clickLogin","setClickLogin","isShow","setIsShow","input","tel","pass","undefined","length","i","type","ADD_DATA_LIST","payload","name","username","street","address","suite","city","zipcode","ENTER_LOGIN","login","event","target","value"],"sources":["/home/ivan/Documents/Bee-RRBT/src/components/UI/ModuleLogin.tsx"],"sourcesContent":["import React, {FC, useEffect, useState} from 'react';\nimport {Button, CloseButton, Modal, ModalBody, ModalHeader, ModalTitle} from \"react-bootstrap\";\nimport {AccountActionType} from \"../../types/typeAccount\";\nimport {useDispatch} from \"react-redux\";\nimport {useTypedSelector} from \"../../hooks/useTypedSelector\";\nimport {fetchAPI} from \"../../store/action-creators/API_Account\";\n\n\ninterface ModuleLogin {\n    setShow?: (show: boolean | undefined) => void;\n    show?: boolean | undefined;\n}\n\ninterface InputValue {\n    tel?: string;\n    pass?: string;\n}\n\nconst ModuleLogin: FC<ModuleLogin> = ({show, setShow}) => {\n    const dispatch = useDispatch();\n    const dataList = useTypedSelector(state => state.account.dataList);\n    const arrayAPI = useTypedSelector(state => state.API.accountArray);\n    const [phone, setPhone] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n    const [clickLogin, setClickLogin] = useState<boolean>(false);\n    const [isShow, setIsShow] = useState<boolean>(true);\n\n\n    const input = ({tel, pass}: InputValue) => {\n        if(tel !== undefined) setPhone(tel);\n        if(pass !== undefined) setPassword(pass);\n    }\n    useEffect(() => {\n        if(arrayAPI.length === 0){\n        // @ts-ignore\n            dispatch(fetchAPI());\n        }\n    },[])\n\n\n    useEffect(() => {\n        if(show === true){\n            setIsShow(true);\n        }\n        if(!isShow){\n            if(setShow) setShow(false);\n        }\n    },[show, isShow])\n\n    useEffect(() => {\n        if (dataList.phone === \"\"){\n            for (let i = 0; i < arrayAPI.length; i++) {\n                if (arrayAPI[i].phone === phone) {\n                    dispatch({\n                        type: AccountActionType.ADD_DATA_LIST,\n                        payload: {\n                            phone: arrayAPI[i].phone,\n                            name: arrayAPI[i].name,\n                            username: arrayAPI[i].username,\n                            street: arrayAPI[i].address.street,\n                            suite: arrayAPI[i].address.suite,\n                            city: arrayAPI[i].address.city,\n                            password: arrayAPI[i].address.zipcode,\n                        }\n                    })\n                }\n            }\n        }\n\n        if(clickLogin /*&& password !== \"\"*/){\n           if((password === dataList.password)&&(phone === dataList.phone)){\n                dispatch({type: AccountActionType.ENTER_LOGIN, payload: {login: true}});\n                setIsShow(false);\n           }\n        }\n    }, [password, phone, clickLogin])\n\n    return (\n        <>\n            <Modal show={isShow}>\n                <ModalHeader><ModalTitle>Вхід</ModalTitle><CloseButton onClick={() => setIsShow(!isShow)}/></ModalHeader>\n                <ModalBody>\n                    <input\n                        onChange={(event) => input({tel: event.target.value})}\n                    />\n                    <input\n                        onChange={(event) => input({pass: event.target.value})}\n                    />\n                    <Button variant={\"success\"} onClick={() => setClickLogin(!clickLogin)}>Увійти</Button>\n                </ModalBody>\n            </Modal>\n        </>\n    );\n};\n\nexport default ModuleLogin;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}