{"ast":null,"code":"import { AccountActionType } from \"../../types/typeAccount\";\nconst initialState = {\n  dataList: {\n    phone: \"\",\n    surname: \"\",\n    firstName: \"\",\n    middleName: \"\",\n    username: \"\",\n    password: \"\",\n    deliveryMethod: \"SelfDelivery\" || \"NovaPoshta\" || \"UkrPoshta\",\n    addressNovaPoshta: {\n      postOffice: \"\",\n      city: \"\",\n      street: \"\",\n      number: \"\"\n    },\n    addressUkrPoshta: {\n      region: \"\",\n      district: \"\",\n      city: \"\",\n      street: \"\",\n      number: \"\",\n      zipcode: \"\"\n    }\n  },\n  historyOrder: [{\n    id: \"\",\n    date: {},\n    productList: {\n      id: \"\",\n      price: 0,\n      stateQuantity: 0,\n      name: \"\",\n      quantity: 0\n    },\n    totalCost: 0\n  }],\n  login: {\n    phone: \"\",\n    password: \"\",\n    login: false,\n    registration: false\n  }\n};\nexport const accountReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case AccountActionType.ADD_DATA_LIST:\n      if (action.payload.addressNovaPoshta) {\n        return {\n          ...state,\n          dataList: {\n            ...state.dataList,\n            addressNovaPoshta: action.payload.addressNovaPoshta,\n            deliveryMethod: action.payload.deliveryMethod\n          }\n        };\n      } else if (action.payload.addressUkrPoshta) {\n        return {\n          ...state,\n          dataList: {\n            ...state.dataList,\n            addressUkrPoshta: action.payload.addressUkrPoshta,\n            deliveryMethod: action.payload.deliveryMethod\n          }\n        };\n      } else return {\n        ...state,\n        dataList: {\n          ...state.dataList,\n          phone: action.payload.phone,\n          surname: action.payload.surname,\n          firstName: action.payload.firstName,\n          middleName: action.payload.middleName,\n          username: action.payload.username,\n          password: action.payload.password,\n          deliveryMethod: action.payload.deliveryMethod\n        }\n      };\n    case AccountActionType.ADD_HISTORY_ORDER:\n      return {\n        ...state,\n        historyOrder: {\n          ...(state.historyOrder[0].id === \"\" ? [action.payload] : {\n            ...state.historyOrder,\n            ...action.payload\n          })\n        }\n      };\n    case AccountActionType.ENTER_LOGIN:\n      return {\n        ...state,\n        login: action.payload\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["AccountActionType","initialState","dataList","phone","surname","firstName","middleName","username","password","deliveryMethod","addressNovaPoshta","postOffice","city","street","number","addressUkrPoshta","region","district","zipcode","historyOrder","id","date","productList","price","stateQuantity","name","quantity","totalCost","login","registration","accountReducer","state","action","type","ADD_DATA_LIST","payload","ADD_HISTORY_ORDER","ENTER_LOGIN"],"sources":["/home/ivan/Documents/Bee-RRBT/src/store/reducers/accountReducer.ts"],"sourcesContent":["import {\n    AccountAction,\n    AccountActionType,\n    AccountState,\n} from \"../../types/typeAccount\";\n\n\n\nconst initialState: AccountState = {\n    dataList: {\n        phone: \"\",\n        surname: \"\",\n        firstName: \"\",\n        middleName: \"\",\n        username: \"\",\n        password: \"\",\n        deliveryMethod: \"SelfDelivery\" || \"NovaPoshta\" || \"UkrPoshta\",\n        addressNovaPoshta: {\n            postOffice: \"\",\n            city: \"\",\n            street: \"\",\n            number: \"\"\n        },\n        addressUkrPoshta: {\n            region: \"\",\n            district: \"\",\n            city: \"\",\n            street: \"\",\n            number: \"\",\n            zipcode: \"\",\n        },\n    },\n\n\n    historyOrder: [{\n        id: \"\",\n        date: {},\n        productList: {\n            id: \"\",\n            price: 0,\n            stateQuantity: 0,\n            name: \"\",\n            quantity: 0\n        },\n        totalCost: 0,\n    }],\n\n    login: {\n        phone: \"\",\n        password: \"\",\n        login: false,\n        registration: false\n    },\n}\n\nexport const accountReducer = (state = initialState,  action: AccountAction): AccountState => {\n    switch (action.type){\n        case AccountActionType.ADD_DATA_LIST:\n            if(action.payload.addressNovaPoshta){\n                return {...state, dataList:{...state.dataList, addressNovaPoshta: action.payload.addressNovaPoshta, deliveryMethod: action.payload.deliveryMethod}}\n            } else\n            if(action.payload.addressUkrPoshta){\n                return {...state, dataList:{...state.dataList, addressUkrPoshta: action.payload.addressUkrPoshta, deliveryMethod: action.payload.deliveryMethod}}\n            } else\n            return {...state, dataList:{...state.dataList,\n                    phone: action.payload.phone,\n                    surname: action.payload.surname,\n                    firstName: action.payload.firstName,\n                    middleName: action.payload.middleName,\n                    username: action.payload.username,\n                    password: action.payload.password,\n                    deliveryMethod: action.payload.deliveryMethod\n            }}\n\n        case AccountActionType.ADD_HISTORY_ORDER:\n                return {...state, historyOrder: {...state.historyOrder[0].id === \"\" ? [action.payload] : {...state.historyOrder, ...action.payload}}}\n\n\n\n        case AccountActionType.ENTER_LOGIN:\n            return {...state, login: action.payload}\n\n        default:\n            return state;\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}